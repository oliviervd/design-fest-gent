@font-face {
    font-family: "Ruda-VariableFont";
    src: local("Ruda-VariableFont"), url("./assets/fonts/Ruda-VariableFont_wght.ttf")
}

@font-face {
    font-family: "Anthony";
    src: local("Anthony"), url("./assets/fonts/Anthony.woff2") format("woff")
}


body {
    font-family: Ruda-VariableFont, serif;
    background: #f1f1f1
}

header{
    font-family: "Anthony", serif;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    padding: 0 30px;
    & h1 {
        font-weight: 100;
    }
}

header > div {
    display: flex;
    flex-flow: column;
    gap: 0;
}

.main-title{
    font-family: "Anthony", serif;
    text-align: center;
   /*border: orange 2px dotted;*/
    border-radius: 90%;
    min-width: 100px;
    margin: 20px auto;
    margin-bottom: 0;
}

.main-title_sub {
    text-align: center;
    margin: 0;
    padding: 0;
}

nav {
    display: flex;
    flex-flow: row;
    justify-content: end;
    gap: 20px;

    & h1:hover {
        color: orange;
    }
}


nav > div {
    display: flex;
    flex-flow: row;
    gap: 10px;

    & h1 {
        padding: 0 10px;
    }
}

.selected {
    background: orange;
    border: blanchedalmond 1px solid;
    border-radius: 50%;
}

.selected:hover {
    color: black;
}

.about{
    justify-content: center;
    text-align: center;
    padding: 30px 30px;
    margin: auto;
    max-width: 900px;
    & p {
        font-size: 1.2em;
    }
}

.hero_placeholder {
    position: absolute;
    top: 50%;
    left: 50%;
    transform:translateY(-50%) translateX(-50%);
    text-align: center;
    background: orange;
    border-radius: 100%;
    & p{
       font-size: 2em;
    }
}

.personal-space{
    display: flex;
    flex-flow: row;
    padding: 0 30px;
    & p {
        padding-left: 20px;
    }
    & p:hover{
        /*color: orange;*/
    }
}

.circularTextContainer {
    position: relative;
    background: orange;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: rotateText 20s linear infinite; /* Adjust the duration and timing function as needed */
}

.circularTextContainer span {
    display: flex;
    justify-content: center;
    align-items: center;
    transform-origin: center;
    width: 10px; /* Adjust based on the size of the text */
    height: 10px; /* Adjust based on the size of the text */
    text-align: center;
    font-size: 1.5em;
}

@keyframes rotateText {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.people_intro{
    padding:0 30px ;
}

@media screen and (max-width: 700px)  {
    nav  {
        display: none;
    }
    
    header > h1 {
        display: none;
    }
    
    header {
        display: block;
    }

    .main-title{
        width: 90%
    }

    .circularTextContainer{
        width: 100px;
        height: 200px;
    }
}